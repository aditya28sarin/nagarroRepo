---------------Attribute selectors---------

The CSS attribute selector matches elements based on the presence or value of a given attribute.
                    
                    
                    
                     /* <a> elements with a title attribute */
                   
                    a[title] {
                    color: purple;
                    }

                    
                    /* <a> elements with an href matching "https://example.org" */
                    a[href="https://example.org"] {
                    color: green;
                    }

                    
                    /* <a> elements with an href containing "example" */
                    
                    a[href*="example"] {
                    font-size: 2em;
                    }

                    
                    /* <a> elements with an href ending ".org" */
                   
                    a[href$=".org"] {
                    font-style: italic;
                    }

                    
                    
                    /* <a> elements whose class attribute contains the word "logo" */
                    
                    a[class~="logo"] {
                    padding: 2px;
                    }




                    Syntax
                    [attr]
                    Represents elements with an attribute name of attr.
                    [attr=value]
                    Represents elements with an attribute name of attr whose value is exactly value.
                    [attr~=value]
                    Represents elements with an attribute name of attr whose value is a whitespace-separated list of words, one of which is exactly value.
                    [attr^=value]
                    Represents elements with an attribute name of attr whose value is prefixed (preceded) by value.
                    [attr$=value]
                    Represents elements with an attribute name of attr whose value is suffixed (followed) by value.
                    [attr*=value]
                    Represents elements with an attribute name of attr whose value contains at least one occurrence of value within the string.




















Pseudo Class - A CSS pseudo-class is a keyword added to a selector that specifies a special state of the selected element(s). For example, :hover can be used to change a button's color when the user's pointer hovers over it. 

Syntax:-
                selector:pseudo-class {
                property: value;
                }




/* Any button over which the user's pointer is hovering */
button:hover {
  color: blue;
}

<b>User action pseudo-classes</b>
    These pseudo-classes require some interaction by the user in order for them to apply, such as holding a mouse pointer over an element.

            :hover
            Matches when a user designates an item with a pointing device, for example holding the mouse pointer over it.
            :active
            Matches when an item is being activated by the user, for example clicked on.
            :focus
            Matches when an element has focus.
            :focus-visible
            Matches when an element has focus and the user agent identifies that the element should be visibly focused. 
            :focus-within
            Matches an element to which :focus applies, plus any element that has a descendant to which :focus applies.

Location pseudo-classes
    These pseudo-classes relate to links, and to targeted elements within the current document.

            :any-link
            Matches an element if the element would match either :link or :visited.
            :link
            Matches links that have not yet been visited.
            :visited
            Matches links that have been visited.
            :local-link
            Matches links whose absolute URL is the same as the target URL, for example anchor links to the same page.
            :target
            Matches the element which is the target of the document URL.
            :target-within
            Matches elements which are the target of the document URL, but also elements which have a descendant which is the target of the document URL.
            :scope
            Represents elements that are a reference point for selectors to match against.


Tree-structural pseudo-classes
    These pseudo-classes relate to the location of an element within the document tree.

            :root
            Represents an element that is the root of the document. In HTML this is usually the <html> element.
            :empty
            Represents an element with no children other than white-space characters.
            :nth-child
            Uses An+B notation to select elements from a list of sibling elements.
            :nth-last-child
            Uses An+B notation to select elements from a list of sibling elements, counting backwards from the end of the list.
            :first-child
            Matches an element that is the first of its siblings.
            :last-child
            Matches an element that is the last of its siblings.
            :only-child
            Matches an element that has no siblings. For example a list item with no other list items in that list.
            :nth-of-type
            Uses An+B notation to select elements from a list of sibling elements that match a certain type from a list of sibling elements.
            :nth-last-of-type
            Uses An+B notation to select elements from a list of sibling elements that match a certain type from a list of sibling elements counting backwards from the end of the list.
            :first-of-type
            Matches an element that is the first of its siblings, and also matches a certain type selector.
            :last-of-type
            Matches an element that is the last of its siblings, and also matches a certain type selector.
            :only-of-type
            Matches an element that has no siblings of the chosen type selector.





A CSS pseudo-element is a keyword added to a selector that lets you style a specific part of the selected element(s). 
        For example, ::first-line can be used to change the font of the first line of a paragraph.

                    Syntax
                    selector::pseudo-element {
                    property: value;
                    }
                    You can use only one pseudo-element in a selector. It must appear after the simple selectors in the statement.




                    /* The first line of every <p> element. */
                    p::first-line {
                    color: blue;
                    text-transform: uppercase;
                    }


                    Note: In contrast to pseudo-elements, pseudo-classes can be used to style an element based on its state.

                    


